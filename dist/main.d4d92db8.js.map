{"version":3,"sources":["main.js"],"names":["log","console","bind","e","selector","document","querySelector","canvas","ctx","getContext","eraserEnabled","setCanvasSize","pageWidth","documentElement","clientWidth","pageHeight","clientHeight","width","height","autoCanvasSize","window","addEventListener","drawCircle","x","y","radius","beginPath","arc","Math","PI","fill","drawLine","x1","y1","x2","y2","lineWidth","moveTo","lineTo","stroke","closePath","listenToMouse","drawing","lastPoint","undefined","clientX","clientY","clearRect","newPoint","changeButton","eraser","brush","old","classList","remove","add","setPencilColor","color","strokeStyle","fillStyle","__main"],"mappings":";AAAA,IAAMA,EAAMC,QAAQD,IAAIE,KAAKD,SAEvBE,EAAI,SAAAC,GAAYC,OAAAA,SAASC,cAAcF,IACvCG,EAASJ,EAAE,WACXK,EAAMD,EAAOE,WAAW,MAC1BC,GAAgB,EAEdC,EAAgB,WACdC,IAAAA,EAAYP,SAASQ,gBAAgBC,YACrCC,EAAaV,SAASQ,gBAAgBG,aAC5CT,EAAOU,MAAQL,EACfL,EAAOW,OAASH,GAGZI,EAAiB,WACrBR,IACAS,OAAOC,iBAAiB,SAAU,WAChCV,OAIEW,EAAa,SAACC,EAAGC,EAAGC,GACxBjB,EAAIkB,YACJlB,EAAImB,IAAIJ,EAAGC,EAAGC,EAAQ,EAAa,EAAVG,KAAKC,IAAQ,GACtCrB,EAAIsB,QAGAC,EAAW,SAACC,EAAIC,EAAIC,EAAIC,GAC5B3B,EAAI4B,UAAY,EAChB5B,EAAIkB,YACJlB,EAAI6B,OAAOL,EAAIC,GACfzB,EAAI8B,OAAOJ,EAAIC,GACf3B,EAAI+B,SACJ/B,EAAIgC,aAGAC,EAAgB,WAChBC,IAAAA,GAAU,EACVC,EAAY,CACdpB,OAAGqB,EACHpB,OAAGoB,GAELrC,EAAOc,iBAAiB,YAAa,SAAAlB,GACnCuC,GAAU,EACJnB,IAAAA,EAAIpB,EAAE0C,QACNrB,EAAIrB,EAAE2C,QACZH,EAAUpB,EAAIA,EACdoB,EAAUnB,EAAIA,EAEVd,EACFF,EAAIuC,UAAUxB,EAAI,EAAGC,EAAI,EAAG,GAAI,IAEhCF,EAAWC,EAAGC,EAJD,KAOjBjB,EAAOc,iBAAiB,YAAa,SAAAlB,GAC/BuC,IAAY,IAAZA,EAAAA,CAGEnB,IAAAA,EAAIpB,EAAE0C,QACNrB,EAAIrB,EAAE2C,QACRpC,GAAAA,EACFF,EAAIuC,UAAUxB,EAAI,EAAGC,EAAI,EAAG,GAAI,QAC3B,CACCwB,IAAAA,EAAW,CAAEzB,EAAAA,EAAGC,EAAAA,GACtBO,EAASY,EAAUpB,EAAGoB,EAAUnB,EAAGwB,EAASzB,EAAGyB,EAASxB,GACxDmB,EAAYK,EAEZ1B,EAAWC,EAAGC,EADC,OAInBjB,EAAOc,iBAAiB,UAAW,SAAAlB,GACjCuC,GAAU,KAIRO,EAAe,WACfC,IAAAA,EAAS/C,EAAE,WACXgD,EAAQhD,EAAE,UACd+C,EAAO7B,iBAAiB,QAAS,WAC/BrB,EAAI,kBAEJA,EAAI,SADJU,GAAiBA,GAEb0C,IAAAA,EAAMjD,EAAE,WACRiD,GACFA,EAAIC,UAAUC,OAAO,UAEvBH,EAAME,UAAUE,IAAI,YAEtBJ,EAAM9B,iBAAiB,QAAS,WAC9BX,GAAiBA,EACb0C,IAAAA,EAAMjD,EAAE,WACRiD,GACFA,EAAIC,UAAUC,OAAO,UAEvBJ,EAAOG,UAAUE,IAAI,aAOnBC,EAAiB,SAAAC,GACrBjD,EAAIkD,YAAcD,EAClBjD,EAAImD,UAAYF,GAGZG,EAAS,WAEbzC,IAEAqC,EAAe,OAEff,IACAQ,KAEFW","file":"main.d4d92db8.js","sourceRoot":"..","sourcesContent":["const log = console.log.bind(console);\n\nconst e = selector => document.querySelector(selector);\nconst canvas = e(\"#canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet eraserEnabled = false;\n\nconst setCanvasSize = () => {\n  const pageWidth = document.documentElement.clientWidth;\n  const pageHeight = document.documentElement.clientHeight;\n  canvas.width = pageWidth;\n  canvas.height = pageHeight;\n};\n\nconst autoCanvasSize = () => {\n  setCanvasSize();\n  window.addEventListener(\"resize\", () => {\n    setCanvasSize();\n  });\n};\n\nconst drawCircle = (x, y, radius) => {\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, Math.PI * 2, false);\n  ctx.fill();\n};\n\nconst drawLine = (x1, y1, x2, y2) => {\n  ctx.lineWidth = 5;\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.stroke();\n  ctx.closePath();\n};\n\nconst listenToMouse = () => {\n  let drawing = false;\n  let lastPoint = {\n    x: undefined,\n    y: undefined\n  };\n  canvas.addEventListener(\"mousedown\", e => {\n    drawing = true;\n    const x = e.clientX;\n    const y = e.clientY;\n    lastPoint.x = x;\n    lastPoint.y = y;\n    const radius = 2;\n    if (eraserEnabled) {\n      ctx.clearRect(x - 5, y - 5, 10, 10);\n    } else {\n      drawCircle(x, y, radius);\n    }\n  });\n  canvas.addEventListener(\"mousemove\", e => {\n    if (drawing !== true) {\n      return;\n    }\n    const x = e.clientX;\n    const y = e.clientY;\n    if (eraserEnabled) {\n      ctx.clearRect(x - 5, y - 5, 10, 10);\n    } else {\n      const newPoint = { x, y };\n      drawLine(lastPoint.x, lastPoint.y, newPoint.x, newPoint.y);\n      lastPoint = newPoint;\n      const radius = 2;\n      drawCircle(x, y, radius);\n    }\n  });\n  canvas.addEventListener(\"mouseup\", e => {\n    drawing = false;\n  });\n};\n\nconst changeButton = () => {\n  let eraser = e(\".eraser\");\n  let brush = e(\".brush\");\n  eraser.addEventListener(\"click\", () => {\n    log(\"eraser clicked\");\n    eraserEnabled = !eraserEnabled;\n    log(\"eraser\", eraserEnabled);\n    let old = e(\".active\");\n    if (old) {\n      old.classList.remove(\"active\");\n    }\n    brush.classList.add(\"active\");\n  });\n  brush.addEventListener(\"click\", () => {\n    eraserEnabled = !eraserEnabled;\n    let old = e(\".active\");\n    if (old) {\n      old.classList.remove(\"active\");\n    }\n    eraser.classList.add(\"active\");\n  });\n};\n// const listenToEraser = () => {};\n\n// const listenToBrush = () => {};\n\nconst setPencilColor = color => {\n  ctx.strokeStyle = color;\n  ctx.fillStyle = color;\n};\n\nconst __main = () => {\n  // 设置画布大小\n  autoCanvasSize();\n  // 设置画笔颜色 (调整 canvas 画布会清空上下文的设置，比如颜色)\n  setPencilColor(\"red\");\n  // 监听事件\n  listenToMouse();\n  changeButton();\n};\n__main();\n"]}